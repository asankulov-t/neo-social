{"version":3,"sources":["components/Profile/Profile.module.css","components/Header/Header.module.css","components/Users/User.module.css","components/Login/Login.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Messages/Message.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/TextAreaButton.module.css","components/common/Loader.module.css","components/Dialogs/Dialog.module.css","Api/Api.ts","redux/AuthReducer.ts","components/Header/Header.tsx","components/SideBar/SideBar.tsx","redux/ProfileReducer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/common/TextAreAndButton.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostContainer.tsx","assets/ava.jpg","components/Profile/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo.tsx","components/common/Loader.tsx","components/Profile/Profile.tsx","redux/DialogReducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Dialog.tsx","components/Dialogs/DialogsContainer.tsx","components/Users/Users.tsx","redux/UsersReducer.ts","components/Users/UsersCon.tsx","components/Login/Login.tsx","App.tsx","redux/ReduxStore.ts","index.tsx","components/SideBar/SideBar.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","USERS_API","currentPage","resForPage","get","then","res","data","id","post","delete","currpage","resforPage","PROFILE_API","status","put","photoFile","formData","FormData","append","LOGIN_API","email","password","remember","rememberMe","initialState","userId","login","isAuth","errorMessage","AcAuthCreator","type","loginThunk","dispatch","resultCode","message","messages","length","GetErrorLogin","Header","useDispatch","headerData","useSelector","state","AuthReducer","className","header","to","nav","ul","li","onClick","SideBar","sidebar","activeClassName","active","posts","likeCount","dislike","profile","setStatus","ProfileReducer","action","newPost","messageText","photos","photo","Post","props","p","src","alt","postText","reaction","like","TextAreAndButton","useForm","register","reset","errors","formState","handleSubmit","t","text","onSubmit","console","log","callBack","placeholder","required","value","title","MyPosts","memo","postData","addPost","postElement","map","reverse","MyPostContainer","dis","profileReducer","e","ProfileStatus","useState","editMode","setEditMode","onDoubleClick","onChange","currentTarget","changeStatus","onBlur","updateSt","ProfileInfo","isOwner","total","wallpict","about","ava","large","fullName","info","aboutMe","href","contacts","facebook","target","htmlFor","files","setPhotoAc","Loader","l","loader","withRouter","match","myId","setIsOwner","useEffect","params","setTimeout","st","getUserStatus","profileData","content","UpdateStatusGs","dialogs","name","DialogReducer","newText","DialogItem","dialogElement","d","di","item","dialogsItems","Messages","messageElement","messageData","m","mes","sendMessage","Dialog","dilogsData","DialogsContainer","dialogData","dialogReducer","Users","users","cart","user","s","small","followed","unfallowFn","fallowFn","pageSize","isFetching","setUsers","UsersReducer","copyState","unFalloCopy","u","isFething","UsersCon","userReducer","Math","ceil","items","getUsersThunk","pages","i","push","allPages","setCurrentPage","setCurrPage","FallowAC","UnFallowAC","Login","auth","minLength","maxLength","check","error","App","path","render","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","Rerender","ReactDOM","basename","process","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.78051d57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallpict\":\"Profile_wallpict__2ikZf\",\"ava\":\"Profile_ava__3iRdQ\",\"about\":\"Profile_about__3wvmg\",\"info\":\"Profile_info__M55Jm\",\"total\":\"Profile_total__1I1oc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__yq7DA\",\"ul\":\"Header_ul__clIVo\",\"li\":\"Header_li__1aM2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"User_cart__SmJv7\",\"s\":\"User_s__12tVB\",\"selected\":\"User_selected__23s74\",\"loader\":\"User_loader__1wXp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3p98m\",\"check\":\"Login_check__2yQGi\",\"error\":\"Login_error__1d7al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Posts_post__8yfIf\",\"reaction\":\"Posts_reaction__1ihoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__1GXT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1yPf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3Aa17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TextAreaButton_text__3VXHa\",\"error\":\"TextAreaButton_error__3MrrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3x2eb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__eECuR\"};","import axios from \"axios\";\r\n\r\nlet instance=axios.create({\r\n    withCredentials:true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:{\r\n        \"API-KEY\":\"c52651a7-580b-433b-99e3-876a6eb54318\"\r\n    }\r\n})\r\n\r\nexport const USERS_API={\r\n    getUsers(currentPage:number, resForPage:number){\r\n        return instance.get(`users?page=${currentPage}&count=${resForPage}`)\r\n            .then(res=>res.data)\r\n    },\r\n    follow(id:number){\r\n        return instance.post(`follow/${id}`)\r\n            .then(res=>res.data)\r\n    },\r\n    unFollow(id:number){\r\n        return instance.delete(`follow/${id}`)\r\n            .then(res=>res.data)\r\n    },\r\n    setPage(currpage:number, resforPage:number){\r\n        return instance.get(`users?page=${currpage}&count=${resforPage}`)\r\n            .then(res=>res.data)\r\n    }\r\n}\r\n\r\n\r\nexport const PROFILE_API={\r\n    getUser(id:number){\r\n        return instance.get(`profile/${id}`)\r\n            .then(res=>res.data)\r\n    },\r\n    getStatus(id:number){\r\n        return instance.get(`profile/status/${id}`).then(status=>status.data)\r\n    },\r\n    upDateStatus(status:string|null){\r\n        return instance.put('profile/status',{status})\r\n    },\r\n    savePhoto(photoFile:any|null){\r\n        let formData=new FormData();\r\n        formData.append('image',photoFile)\r\n        return instance.put(`profile/photo`,formData,{\r\n            headers:{\r\n                \"Content-Type\":'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const LOGIN_API={\r\n    getAuth(){\r\n        return instance.get('auth/me').then(res=>res.data)\r\n    },\r\n    login(email:string,password:string,remember:boolean){\r\n        return instance.post(`auth/login`,{email,password,rememberMe:remember})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","import {AcAuth, AuthType, ErrorLogin} from \"../types/Types\";\r\nimport {Dispatch} from \"redux\";\r\nimport {LOGIN_API} from \"../Api/Api\";\r\n\r\n\r\nlet initialState={\r\n    userId:null,\r\n    email:null,\r\n    login:null,\r\n    isAuth:false,\r\n    errorMessage:''\r\n}\r\nexport  const AuthReducer=(state:AuthType=initialState,action:AcAuth|ErrorLogin)=>{\r\n    switch (action.type) {\r\n        case \"SET_USER_DATA\":\r\n            return{\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case \"GET_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorMessage:action.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AcAuthCreator=(userId:string|null,\r\n                            email:string|null,\r\n                            login:string|null,\r\n                            isAuth:boolean)=>{\r\n    return{\r\n        type:'SET_USER_DATA',\r\n        data:{userId, email, login,isAuth}\r\n    }\r\n}\r\nexport const GetErrorLogin=(message:string|null)=>{\r\n    return{\r\n        type:'GET_ERROR',\r\n        message\r\n    }\r\n}\r\nexport const getAuthThunk=()=>{\r\n    return(dispatch:Dispatch)=>{\r\n        LOGIN_API.getAuth()\r\n            .then(data=>{\r\n                if (data.resultCode===0){\r\n                    let {id, email, login}=data.data;\r\n                    dispatch(AcAuthCreator(id,email,login,true))\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const loginThunk=(email:string,password:string,remember:boolean)=>{\r\n    return(dispatch:any)=>{\r\n        LOGIN_API.login(email,password,remember).then(res=>{\r\n            if (res.data.resultCode==0){\r\n                dispatch(getAuthThunk())\r\n            }else{\r\n                let message=res.data.messages.length>0?res.data.messages[0]:'Some Error';\r\n                dispatch(GetErrorLogin(message))\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const logOutThunk=()=>{\r\n    return(dispatch:Dispatch)=>{\r\n        LOGIN_API.logout().then(res=>{\r\n            if (res.data.resultCode===0){\r\n                dispatch(AcAuthCreator(null,null,null,false))\r\n            }\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport header from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logOutThunk} from \"../../redux/AuthReducer\";\r\nimport {StateData} from \"../../types/Types\";\r\n\r\nconst Header = () => {\r\n\r\n    let dispatch = useDispatch()\r\n    // let aut=true\r\n    // useEffect(()=>{\r\n    //    dispatch(getAuthThunk(aut))\r\n    // },[aut])\r\n    let headerData = useSelector((state: StateData) => state.AuthReducer)\r\n    let logOut = () => {\r\n        dispatch(logOutThunk())\r\n    }\r\n    return (\r\n        <header className={`${header.header} fixed-top`}>\r\n            <NavLink to=\"#\"><h2>NEO</h2></NavLink>\r\n            <nav className={header.nav}>\r\n                <ul className={header.ul}>\r\n                    <li className={header.li}><NavLink to=\"login\">{\r\n                        headerData.isAuth === true ? headerData.login :\r\n                            <span><i className=\"fas fa-sign-out-alt\"></i></span>\r\n                    }</NavLink></li>\r\n                    <li className={header.li}><NavLink to={headerData.isAuth?'profile':'login'}>{\r\n                        headerData.isAuth === true ?\r\n                            <span onClick={logOut}><i className=\"fas fa-running\"></i></span> : 'login'\r\n                    }</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport sidebar from './SideBar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nconst SideBar = () => {\r\n    return (\r\n        <div >\r\n            <nav className={`${sidebar.nav} ` }>\r\n                <ul className={sidebar.ul}>\r\n                    <li className={sidebar.li}><NavLink activeClassName={sidebar.active} to=\"/profile\"><i className=\"fas fa-user\"></i><span>Profile</span></NavLink></li>\r\n                    <li className={sidebar.li}><NavLink activeClassName={sidebar.active} to=\"/messages\"><i className=\"fas fa-envelope\"></i><span>Messages</span></NavLink></li>\r\n                    <li className={sidebar.li}><NavLink activeClassName={sidebar.active} to=\"/news\"><i className=\"fas fa-newspaper\"></i><span>News</span></NavLink></li>\r\n                    <li className={sidebar.li}><NavLink activeClassName={sidebar.active} to=\"/music\"><i className=\"fas fa-music\"></i><span>Music</span></NavLink></li>\r\n                    <li className={sidebar.li}><NavLink activeClassName={sidebar.active} to=\"/setting\"><i className=\"fas fa-tools\"></i><span>Setting</span></NavLink></li>\r\n                    <li className={sidebar.li}><NavLink activeClassName={sidebar.active} to=\"/Users\"><i className=\"fas fa-users\"></i><span>Users</span></NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBar;","import {ActionType, PostType, ProfilePageTypes, ProfileType} from '../types/Types';\r\nimport {Dispatch} from \"redux\";\r\nimport {PROFILE_API} from \"../Api/Api\";\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, post: 'Hello world', likeCount: 5, dislike: 3},\r\n        {id: 2, post: 'I want to be in USA', likeCount: 55, dislike: 0},\r\n        {id: 3, post: 'I am learning js all time', likeCount: 667, dislike: 0},\r\n        {id: 4, post: 'social network is evil', likeCount: 856, dislike: 800},\r\n        {id: 5, post: 'Hello friend lets walk', likeCount: 1250, dislike: 1},\r\n        {id: 6, post: 'It incubator is best courses', likeCount: 1591, dislike: 0},\r\n    ],\r\n    profile:null,\r\n    status:'as'\r\n}\r\n\r\nconst ProfileReducer = (state: ProfilePageTypes = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"ADD_POST\":\r\n            let newPost: PostType = {\r\n                id: 55,\r\n                post: action.messageText,\r\n                likeCount: 0,\r\n                dislike: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts:[...state.posts,newPost],\r\n            }\r\n            // let newState={...state}\r\n            // newState.posts=[...state.posts]\r\n            // newState.posts.push(newPost);\r\n            // newState.newPostText = ''\r\n            // return newState\r\n        // case 'CHANGE_POST_TEXT':\r\n        //     return {\r\n        //         ...state,\r\n        //         newPostText:action.messageText\r\n        //     }\r\n        case 'SET_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case 'GET_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'SAVE_PHOTO':\r\n            return {\r\n                ...state,\r\n                profile:{...state.profile,photos:action.photo}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport const addPostAC = (newText: string) => {\r\n    return {\r\n        type: 'ADD_POST',\r\n        messageText: newText\r\n    } as const\r\n}\r\n\r\nexport const SetProfile=(profile:ProfileType)=>{\r\n    return{\r\n        type:'SET_PROFILE',\r\n        profile\r\n    }\r\n}\r\nconst setStatus= (status: string|null)=>{\r\n    return{\r\n        type:'GET_STATUS',\r\n        status\r\n    }\r\n}\r\nexport const getUserProfile=(id:number)=>{\r\n    return (dispatch:Dispatch)=>{\r\n        PROFILE_API.getUser(id)\r\n            .then(data=>{\r\n                setTimeout(()=>{\r\n                    dispatch(SetProfile(data))\r\n                },500)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const getUserStatus=(id:number)=>{\r\n    return (dispatch:Dispatch)=>{\r\n        PROFILE_API.getStatus(id).then((st)=>{\r\n            dispatch(setStatus(st))\r\n        })\r\n    }\r\n}\r\n\r\nexport const UpdateStatusGs=(status:string|null)=>{\r\n    return (dispatch:Dispatch)=>{\r\n        PROFILE_API.upDateStatus(status).then(res=>{\r\n            if (res.data.resultCode==0){\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n    }\r\n}\r\nconst setPhotoAc=(photo:any)=>{\r\n    return{\r\n        type:'SAVE_PHOTO',\r\n        photo:photo\r\n    }\r\n}\r\nexport const SavePhoto=(photo:any)=>{\r\n    return (dispatch:Dispatch)=>{\r\n        PROFILE_API.savePhoto(photo).then(res=>{\r\n            dispatch(setPhotoAc(res.data.data.photos\r\n            ))\r\n        })\r\n    }\r\n}\r\n\r\nexport default ProfileReducer;","import React from 'react';\r\nimport p from './Posts.module.css'\r\n\r\ntype PostTypes={\r\n    postText:string\r\n    like:number\r\n    dislike:number\r\n}\r\n\r\nconst Post = (props:PostTypes) => {\r\n    return (\r\n        <div className={p.post}>\r\n            <img src=\"https://i0.wp.com/jasonstatham.org/wp-content/uploads/2021/08/1.jpg?resize=800%2C400&ssl=1\" alt=\"\"/>\r\n            <p>{props.postText}</p>\r\n            <div className={p.reaction}>\r\n                <span><i className=\"far fa-thumbs-up\"></i> {props.like}</span>\r\n                <span><i className=\"far fa-thumbs-down\"></i> {props.dislike}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport t from './TextAreaButton.module.css'\r\n\r\ntype FormValues = {\r\n    message: string;\r\n};\r\ntype PropsType={\r\n    message:string,\r\n    callBack:(e:string)=>void,\r\n    title:string\r\n}\r\nconst TextAreAndButton = (props:PropsType) => {\r\n    const { register,reset,formState:{errors}, handleSubmit } = useForm<FormValues>();\r\n    const onSubmit: SubmitHandler<FormValues> = data => {\r\n        console.log(data);\r\n        let message=data.message\r\n        if (message){\r\n            props.callBack(message)\r\n            reset()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={t.text} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div>\r\n                <textarea placeholder={props.message} {...register(\"message\",{\r\n                    required:'Пустое поле'\r\n                })} />\r\n             <><p>{errors?.message?.message}</p></>\r\n            </div>\r\n            <input value={props.title} type=\"submit\" />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TextAreAndButton;","import React, { memo } from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport p from './MyPosts.module.css'\r\nimport TextAreAndButton from \"../../common/TextAreAndButton\";\r\n\r\ntype InPostData = {\r\n    id: number\r\n    post: string\r\n    likeCount: number\r\n    dislike: number\r\n}\r\ntype MyPostsData = {\r\n    postData: Array<InPostData>\r\n    addPost:(e:string)=>void\r\n}\r\n\r\n\r\nconst MyPosts =memo( ({postData,addPost}:MyPostsData) => {\r\n    console.log('Render')\r\n    // const addPost = () => {\r\n    //     props.addPost(props.newPostText)\r\n    //\r\n    // }\r\n    // const onChangeHendler = (e: ChangeEvent<HTMLTextAreaElement>) =>props.onChangeText(e.currentTarget.value)\r\n\r\n    let postElement =[...postData].map(post => <Post key={post.id}\r\n                                                postText={post.post}\r\n                                                like={post.likeCount}\r\n                                                dislike={post.dislike}/>).reverse()\r\n    return (\r\n        <div className={p.posts}>\r\n            My posts\r\n            <div>\r\n                <TextAreAndButton title={'Опубликовать'} message={'New post'} callBack={addPost}/>\r\n            </div>\r\n            <div>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n export default MyPosts;","import {addPostAC} from \"../../../redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport {StateData} from \"../../../types/Types\";\r\n\r\n\r\n// type myPostContainerTypes={\r\n//     dispatch:(action: ActionType) => void\r\n//     postData:Array<PostType>\r\n//     newPostText:string\r\n// }\r\n\r\n\r\n// const MyPostContainer = (props:myPostContainerTypes) => {\r\n//     const addPost = () => {\r\n//         if (props.newPostText !== '') {\r\n//             props.dispatch(addPostAC(props.newPostText))\r\n//             console.log(props.postData)\r\n//         }\r\n//\r\n//     }\r\n//     const onChangeHendler = (e: string) => props.dispatch(changePostTextAC(e))\r\n//     return (<MyPosts newPostText={props.newPostText}\r\n//                      onChangeText={onChangeHendler}\r\n//                      addPost={addPost}\r\n//                      postData={props.postData}\r\n//         />\r\n//     );\r\n// };\r\n\r\n// let mapStateToProps=(state:StateData)=>{\r\n//     console.log(state)\r\n//     return{\r\n//         postData:state.profileReducer.posts,\r\n//         newPostText:state.profileReducer.newPostText\r\n//     }\r\n// }\r\n// let mapDispatchToProps=(dispatch:any)=>{\r\n//     return{\r\n//         onChangeText:(e:string)=>{dispatch(changePostTextAC(e))},\r\n//         addPost:(e:string)=>{dispatch(addPostAC(e))}\r\n//     }\r\n// }\r\n//\r\n//\r\n// const MyPostContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n//\r\n// export default MyPostContainer;\r\n\r\nimport React from 'react';\r\n\r\nconst MyPostContainer = () => {\r\n    let postData=useSelector((state:StateData)=>state);\r\n    let dis=useDispatch();\r\n    let addPost=(e:string)=>{\r\n        dis(addPostAC(e))\r\n    }\r\n    return <MyPosts postData={postData.profileReducer.posts} addPost={addPost} />\r\n};\r\n\r\nexport default MyPostContainer;","export default __webpack_public_path__ + \"static/media/ava.689a452b.jpg\";","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype ProfileStatusType={\r\n    status:string|null,\r\n    updateSt:(status:string|null)=>void\r\n}\r\n\r\nconst ProfileStatus = (props:ProfileStatusType) => {\r\n    const [editMode,setEditMode]=useState(false)\r\n    const [status,setStatus]=useState<string|null>(props.status?props.status:'')\r\n    let activeMode=()=>{\r\n        setEditMode(true)\r\n    }\r\n    let deActiveMode=()=>{\r\n        setEditMode(false)\r\n        props.updateSt(status)\r\n        setStatus('')\r\n    }\r\n    const changeStatus=(e:ChangeEvent<HTMLInputElement>)=>{\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    // @ts-ignore\r\n    return (\r\n        <div>\r\n            {!editMode&&<p onDoubleClick={activeMode}>{props.status?props.status:'empty status'}</p>}\r\n            {editMode&&<input onChange={(e)=>changeStatus(e)} onBlur={deActiveMode} className=\"form-control\"\r\n                              type=\"text\" value={status?status:'empty status'}\r\n                              />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;","import React, {ChangeEvent} from 'react';\r\nimport p from \"./Profile.module.css\";\r\nimport {ProfileType} from \"../../types/Types\";\r\nimport ava from '../../assets/ava.jpg'\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport {SavePhoto} from \"../../redux/ProfileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type InfoType = {\r\n    profile: ProfileType,\r\n    updateSt:(status:string|null)=>void,\r\n    status:string|null\r\n    isOwner:boolean\r\n}\r\nconst ProfileInfo = (props: InfoType) => {\r\n    console.log('is owner '+props.isOwner)\r\n    let data={...props.profile}\r\n    let dispatch=useDispatch();\r\n\r\n    let setPhoto=(e:any)=>{\r\n            dispatch(SavePhoto(e.target.files[0]))\r\n    }\r\n    return (\r\n        <div className={p.total}>\r\n            <img className={p.wallpict}\r\n                 src=\"https://www.bergfreunde.eu/out/pictures/promo/picture_brandshop_1440x490_4.jpg\" alt=\"\"/>\r\n            <div className={p.about}>\r\n                <img className={p.ava} src={data.photos.large ? data.photos.large : ava}\r\n                     alt={data.fullName != null ? data.fullName : 'Photo'}/>\r\n\r\n                <div className={p.info}>\r\n                    <p>{data.fullName}</p>\r\n                    <p>{data.aboutMe}</p>\r\n                    <ProfileStatus updateSt={props.updateSt} status={props.status}/>\r\n                    <p><a href={data.contacts.facebook != null ? 'https://'+data.contacts.facebook : ''}\r\n                          target='_self'\r\n                    >{data.contacts.facebook?'Facebook':null}</a>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n            {props.isOwner?\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">Поменять аватар</label>\r\n                    <input onChange={setPhoto} className=\"form-control\" type=\"file\" id=\"formFile\"/>\r\n                </div>\r\n                :null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport l from './Loader.module.css'\r\nconst Loader = () => {\r\n    return (\r\n        <div className={l.loader}>\r\n            <img src={'https://homehardware.sirv.com/resources/images/loading-image.gif'} alt=\"\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, {useEffect, useState} from 'react';\nimport p from '../Profile/Profile.module.css'\nimport MyPostContainer from \"./MyPosts/MyPostContainer\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUserProfile, getUserStatus, UpdateStatusGs,SavePhoto} from '../../redux/ProfileReducer';\nimport {StateData} from \"../../types/Types\";\nimport Loader from \"../common/Loader\";\nimport {Redirect, withRouter} from 'react-router-dom';\n\nconst Profile = ({match}:any) => {\n\n    let dispatch=useDispatch();\n    let myId=useSelector((state:StateData)=>state.AuthReducer.userId);\n    let [isOwner,setIsOwner]=useState(false)\n    useEffect(()=>{\n        let userId=match.params.userId\n        if (!userId){\n            userId=myId\n            setIsOwner(true)\n        }\n        dispatch(getUserProfile(userId));\n        dispatch(getUserStatus(userId))\n    },[])\n    let profileData=useSelector((state :StateData)=>state.profileReducer.profile);\n    let isAuth=useSelector((state :StateData)=>state.AuthReducer.isAuth)\n    let status=useSelector((state :StateData)=>state.profileReducer.status)\n\n    let updateFuckingStatus=(status:string|null)=>{\n        dispatch(UpdateStatusGs(status))\n    }\n    if (!isAuth)return <Redirect to={'/login'}/>\n    return (\n        <div className={p.content}>\n            {profileData?<ProfileInfo isOwner={isOwner} status={status} updateSt={updateFuckingStatus} profile={profileData}/>:<Loader/>}\n            <MyPostContainer\n            />\n        </div>\n    );\n};\nexport default withRouter(Profile);\n\n\n","import {ActionType, MessagePageType, MessageType} from '../types/Types';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [{id: 1, name: 'Arken'},\r\n        {id: 2, name: 'Adil'},\r\n        {id: 3, name: 'Miron'},\r\n        {id: 4, name: 'John'},\r\n        {id: 5, name: 'Ledy Gaga'},\r\n        {id: 6, name: 'Johny'},],\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'How was your day?'},\r\n        {id: 3, message: 'Can I help you'},\r\n        {id: 4, message: 'See you at school'},\r\n        {id: 5, message: 'React Is best Framework'},\r\n        {id: 6, message: 'You must learn Js'},]\r\n}\r\n\r\nconst DialogReducer = (state: MessagePageType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"SEND_MESSAGE\":\r\n            let newText: MessageType = {\r\n                id: 8958,\r\n                message: action.messageText\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newText],\r\n            }\r\n        // let copystate={...state}\r\n        // copystate.messages=[...state.messages]\r\n        // copystate.messages.push(newText)\r\n        // copystate.messageText = ''\r\n        // return copystate\r\n        // case \"CHANGE_MESSAGE_TEXT\":\r\n        //     return {\r\n        //         ...state,\r\n        //         messageText: action.messageText\r\n        //     }\r\n        default:\r\n            return state\r\n    }\r\n\r\n};\r\nexport const sendMessageAC = (messageText: string) => {\r\n    return {\r\n        type: 'SEND_MESSAGE',\r\n        messageText: messageText\r\n    }\r\n}\r\n// export const changeMessageAC = (messageText: string) => {\r\n//\r\n//     return {\r\n//         type: 'CHANGE_MESSAGE_TEXT',\r\n//         messageText: messageText\r\n//     } as const\r\n// }\r\nexport default DialogReducer;","import React from 'react';\r\nimport di from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype InDialogItemTypes = {\r\n    id: number\r\n    name: string\r\n}\r\ntype DialogItemTypes = { dialogs: Array<InDialogItemTypes> }\r\n\r\nconst DialogItem = (props: DialogItemTypes) => {\r\n\r\n    let dialogElement = props.dialogs.map(d => <div key={d.id} className={di.item}><NavLink\r\n        to={`/messages/${d.id}`}>{d.name}</NavLink></div>)\r\n    return (\r\n        <div className={di.dialogsItems}>\r\n            {dialogElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React, {ChangeEvent} from 'react';\r\nimport mes from \"./Message.module.css\";\r\nimport TextAreAndButton from \"../../common/TextAreAndButton\";\r\n\r\ntype InMessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\ntype MessagesType = {\r\n    messageData: Array<InMessageType>\r\n    sendMessage:(e:string)=>void\r\n}\r\n\r\nconst Messages = (props: MessagesType) => {\r\n\r\n    const sendMessage = (e:string) => {\r\n        props.sendMessage(e)\r\n    }\r\n\r\n    // const changeMessage = (e: ChangeEvent<HTMLTextAreaElement>) =>props.changeMessage(e.currentTarget.value)\r\n\r\n    let messageElement = props.messageData.map(m => (\r\n        <div key={m.id} className={mes.message}>\r\n            {m.message}\r\n        </div>\r\n    ))\r\n    return (\r\n        <div className={`col-9 ${mes.messages}`}>\r\n            {messageElement}\r\n            <div>\r\n                {/*<textarea value={props.text}*/}\r\n                {/*          onChange={changeMessage}></textarea>*/}\r\n                {/*<div>*/}\r\n                {/*    <button onClick={sendMessage}>Add post</button>*/}\r\n                {/*</div>*/}\r\n                <TextAreAndButton title={'Отправить'} message={'message'} callBack={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;","import React from 'react';\r\nimport d from './Dialog.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {DialogsTypes, StateData} from \"../../types/Types\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype dialogPropTypes={\r\n    dilogsData:DialogsTypes\r\n    sendMessage:(e:string)=>void\r\n}\r\nconst Dialog = (props: dialogPropTypes) => {\r\n    let isAuth=useSelector((state :StateData)=>state.AuthReducer.isAuth)\r\n    if (!isAuth)return <Redirect to={'/login'}/>\r\n    return (\r\n        <div className={`row ${d.dialogs}`}>\r\n            <div className={'col-3'}>\r\n                <DialogItem dialogs={props.dilogsData.dialogs}/>\r\n            </div>\r\n            <Messages\r\n                messageData={props.dilogsData.messages}\r\n                sendMessage={props.sendMessage}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialog;","import { sendMessageAC} from \"../../redux/DialogReducer\";\r\nimport Dialog from \"./Dialog\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { StateData } from \"../../types/Types\";\r\n\r\n\r\n\r\n\r\n// type DialogsDataType = {\r\n//     dialogs: Array<DialogsType>\r\n//     messages: Array<MessageType>\r\n// }\r\n// type DialogsContainerTypes={\r\n//     text: string\r\n//     dialogsData: DialogsDataType\r\n//     dispatch: (action: ActionType) => void\r\n// }\r\n// const DialogsContainer = (props:DialogsContainerTypes) => {\r\n//     const sendMessage = () => {\r\n//         if (props.text !== '') {\r\n//             props.dispatch(sendMessageAC())\r\n//         }\r\n//     }\r\n//     const changeMessage = (e:string) => props.dispatch(changeMessageAC(e))\r\n//     let text=props.text\r\n//     let data=props.dialogsData;\r\n//     return <Dialog text={text}\r\n//                    dialogsData={data}\r\n//                    sendMessage={sendMessage}\r\n//                    changeMessage={changeMessage}/>\r\n//     ;\r\n// };\r\n\r\n\r\n\r\n// let mapStateToProps=(state:StateData)=>{\r\n//     console.log(state)\r\n//     return{\r\n//         dialogsData:state,\r\n//         text:state.dialogReducer.messageText\r\n//     }\r\n// }\r\n// let mapsDispatchToProps=(dispatch:any)=>{\r\n//     return{\r\n//         changeMessage:(e:string)=>{dispatch(changeMessageAC(e))},\r\n//         sendMessage:(e:string)=>{dispatch(sendMessageAC(e))}\r\n//\r\n//     }\r\n// }\r\n//\r\n//\r\n// const DialogsContainer=connect(mapStateToProps,mapsDispatchToProps)(Dialog);\r\n//\r\n// export default DialogsContainer;\r\n\r\n\r\n// import React from 'react';\r\n//\r\n// const DialogsContainer = () => {\r\n//     let dialogsData=useSelector((state :StateData)=>state.dialogReducer);\r\n//     let dispatch=useDispatch();\r\n//     let changeMessage=(e:string)=>{\r\n//         dispatch(changeMessageAC(e))\r\n//     }\r\n//     let sendMessage=(e:string)=>{\r\n//         dispatch(sendMessageAC(e))\r\n//     }\r\n//     return <Dialog changeMessage={changeMessage} sendMessage={sendMessage} dilogsData={dialogsData}/>\r\n// };\r\n//\r\n// export default DialogsContainer;\r\n\r\nimport React from 'react';\r\n\r\nconst DialogsContainer = () => {\r\n    let dialogData=useSelector((state:StateData)=>state.dialogReducer)\r\n    let dispatch=useDispatch();\r\n    let sendMessage=(e:string)=>{\r\n        dispatch(sendMessageAC(e))\r\n    }\r\n    return <Dialog dilogsData={dialogData} sendMessage={sendMessage}/>\r\n};\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport {UsersType} from \"../../types/Types\";\r\nimport ava from '../../assets/ava.jpg'\r\nimport users from './User.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersTypes = {\r\n    users: Array<UsersType>,\r\n    fallowFn: (id: number) => void\r\n    unfallowFn: (id: number) => void\r\n}\r\n\r\n\r\nconst Users = (props: UsersTypes) => {\r\n    return (\r\n        <div className={users.cart}>\r\n            {\r\n                props.users.map((user) => {\r\n                    return (\r\n                        <div className={users.s}>\r\n                            <div>\r\n                                <NavLink to={`/profile/${user.id}`}>\r\n                                    <img src={user.photos.small === null ? ava : user.photos.small} alt=\"\"/>\r\n                                </NavLink>\r\n                                <h3>{user.name}</h3>\r\n                                <h4>{user.status}</h4>\r\n                            </div>\r\n\r\n                            <button\r\n                                onClick={user.followed === true ? () => props.unfallowFn(user.id) : () => props.fallowFn(user.id)}>\r\n                                {user.followed === true ? 'Отписаться' : 'Подписаться'}\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import {FallowAc, fethingType, setCurrPage, setTotalType, setUser, UnFallowAc, Users} from \"../types/Types\";\r\nimport {Dispatch} from \"redux\";\r\nimport {USERS_API} from \"../Api/Api\";\r\n\r\nlet initialState:Users={\r\n  users:[\r\n\r\n  ],\r\n  currentPage:1,\r\n  total:0,\r\n  pageSize:15,\r\n  isFetching:true\r\n}\r\n\r\n\r\n\r\nconst UsersReducer=(state=initialState, action:FallowAc|UnFallowAc|setUser|setCurrPage|fethingType|setTotalType)=>{\r\n    switch (action.type) {\r\n        case \"FALLOW\":\r\n            let copyState={...state,users:state.users.map(s=>s.id===action.id?{...s,followed:true}:s)}\r\n            return copyState;\r\n        case \"UNFALLOW\":\r\n            let unFalloCopy={...state,users:state.users.map(u=>u.id===action.id?{...u,followed:false}:u)}\r\n            return unFalloCopy\r\n        case 'SET_USERS':\r\n            return {...state, users: [...action.users]}\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {...state, currentPage:action.currentPage}\r\n        case \"SET_FETCHING\":\r\n            return {...state, isFetching:action.isFething}\r\n        case \"SET_TOTAL\":\r\n            return {...state, total:action.total}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const FallowAC=(id:number):FallowAc=>{\r\n    return{\r\n        type:'FALLOW',\r\n        id\r\n    }\r\n}\r\nexport const UnFallowAC=(id:number):UnFallowAc=>{\r\n    return{\r\n        type:'UNFALLOW',\r\n        id\r\n    }\r\n}\r\nexport const setUsers=(users:Users)=>{\r\n    return{\r\n        type:'SET_USERS',\r\n        users\r\n    }\r\n}\r\nexport const setCurrentPage=(currentPage:number):setCurrPage=>{\r\n    return{\r\n        type:'SET_CURRENT_PAGE',\r\n        currentPage\r\n    }\r\n}\r\nexport const toggleAc=(isFething:boolean):fethingType=>{\r\n    return{\r\n        type:'SET_FETCHING',\r\n        isFething\r\n    }\r\n}\r\nexport const setTotalCount=(total:number):setTotalType=>{\r\n    return{\r\n        type:'SET_TOTAL',\r\n        total\r\n    }\r\n}\r\n\r\nexport const getUsersThunk=(currpage:number,pageSize:number)=>{\r\n    // @ts-ignore\r\n    return dispatch=>{\r\n        USERS_API.getUsers(currpage,pageSize)\r\n            .then(data=>{\r\n                    dispatch(setUsers(data.items))\r\n                    dispatch(setTotalCount(200))\r\n                    dispatch(toggleAc(false))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default UsersReducer;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {StateData} from \"../../types/Types\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    FallowAC,\r\n    getUsersThunk,\r\n    setCurrentPage,\r\n    setUsers,\r\n    UnFallowAC\r\n} from \"../../redux/UsersReducer\";\r\nimport u from './User.module.css'\r\nimport Loader from \"../common/Loader\";\r\nimport { USERS_API} from \"../../Api/Api\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst UsersCon = () => {\r\n    let dis=useDispatch();\r\n    let users=useSelector((state:StateData) => state.userReducer.users);\r\n    let currentPage=useSelector((state:StateData) => state.userReducer.currentPage);\r\n    let loader=useSelector((state:StateData) => state.userReducer.isFetching);\r\n    let total=useSelector((state:StateData) => state.userReducer.total);\r\n    let pageSize=useSelector((state:StateData) => state.userReducer.pageSize);\r\n    let resForPage=Math.ceil(total/pageSize);\r\n    let isAuth=useSelector((state :StateData)=>state.AuthReducer.isAuth)\r\n    useEffect(()=>{\r\n                dis(getUsersThunk(currentPage,resForPage))\r\n\r\n                // USERS_API.getUsers(currentPage,pageSize)\r\n                //     .then(data=>{\r\n                //     setTimeout(()=>{\r\n                //         dis(setUsers(data.items))\r\n                //         dis(setTotalCount(200))\r\n                //         dis(toggleAc(false))\r\n                //     },1000)\r\n                //\r\n                // })\r\n    },[])\r\n\r\n    let pages=[]\r\n    for (let i=1;i<=resForPage;i++){\r\n        pages.push(i)\r\n    }\r\n\r\n    const fallowFn=(id:number)=>{\r\n        USERS_API.follow(id)\r\n        .then(data=>{\r\n            if (data.resultCode===0){\r\n                dis(FallowAC(id))\r\n            }\r\n        })\r\n    }\r\n\r\n    const unfallowFn=(id:number)=>{\r\n        USERS_API.unFollow(id)\r\n        .then(data=>{\r\n            if (data.resultCode===0){\r\n                dis(UnFallowAC(id))\r\n            }\r\n        })\r\n    }\r\n\r\n    const setCurrPage=(p:number)=>{\r\n        dis(setCurrentPage(p));\r\n\r\n        USERS_API.setPage(p,resForPage)\r\n        .then(data=>{\r\n            dis(setUsers(data.items))\r\n        })\r\n    }\r\n\r\n\r\n    let allPages= pages.map((p)=>{\r\n        return(\r\n            <li ><a onClick={()=>setCurrPage(p)} className=\"page-link\" href=\"#\">{p}</a></li>\r\n        )\r\n    })\r\n    if (!isAuth)return <Redirect to={'/login'}/>\r\n    return (\r\n        <div>\r\n            {loader===true?  <div className={u.loader}><Loader/></div>:\r\n               <>\r\n                   <ul className=\"pagination justify-content-center\">\r\n                       {allPages}\r\n                   </ul>\r\n                   <Users users={users} fallowFn={fallowFn} unfallowFn={unfallowFn}/>\r\n               </>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersCon;","import React from 'react';\r\nimport l from './Login.module.css'\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { loginThunk} from \"../../redux/AuthReducer\";\r\nimport {StateData} from \"../../types/Types\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype FormValues = {\r\n    login: string;\r\n    password: string;\r\n    remember: boolean;\r\n};\r\n\r\nexport default function Login() {\r\n    let dis = useDispatch();\r\n    let auth = useSelector((state: StateData) => state.AuthReducer.isAuth);\r\n    let errorMessage=useSelector((state:StateData)=>state.AuthReducer.errorMessage);\r\n    const {register, formState: {errors}, handleSubmit} = useForm<FormValues>();\r\n    const onSubmit: SubmitHandler<FormValues> = data => {\r\n        console.log(data);\r\n        dis(loginThunk(data.login, data.password, data.remember));\r\n    };\r\n    if (auth) {\r\n        return <Redirect to={'profile'}/>\r\n    } else {\r\n        return (\r\n            <form className={l.login} onSubmit={handleSubmit(onSubmit)}>\r\n                <div >\r\n                    <input placeholder={'Login'} {...register(\"login\",\r\n                        {\r\n                            required: 'Поле обязательно к заполнению', minLength: {value: 5, message: 'Минимум 5 символов'},\r\n                            maxLength: {\r\n                                value: 35,\r\n                                message: 'Максимум 20 символов'\r\n                            }\r\n                        })} />\r\n                </div>\r\n                <div>{errors?.login && <p>{errors?.login?.message}</p>}</div>\r\n                <div>\r\n                    <input type='password' placeholder={'Password'} {...register(\"password\",\r\n                        {\r\n                            required: 'Поле обязательно к заполнению',\r\n                            minLength: {value: 3, message: 'Минимум 3 символов'},\r\n                            maxLength: 20\r\n                        })} />\r\n                </div>\r\n                <div>{errors?.password && <p>{errors?.password?.message}</p>}</div>\r\n                <div className={l.check}><input type=\"checkbox\" {...register(\"remember\")} /><span>Remember me</span>\r\n                </div>\r\n                <div className={l.error}>\r\n                    {errorMessage&&errorMessage}\r\n                </div>\r\n                <input value={'Войти'} type=\"submit\"/>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport SideBar from \"./components/SideBar/SideBar\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport {Route} from 'react-router-dom';\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersCon from \"./components/Users/UsersCon\";\r\nimport Login from \"./components/Login/Login\";\r\n\r\n// type DialogType = {\r\n//     id: number\r\n//     name: string\r\n// }\r\n// type MessageType = {\r\n//     id: number\r\n//     message: string\r\n// }\r\n// type DialogsTypes = {\r\n//     messageText: string\r\n//     dialogs: Array<DialogType>\r\n//     messages: Array<MessageType>\r\n// }\r\n//\r\n// type PostDataType = {\r\n//     id: number\r\n//     post: string\r\n//     likeCount: number\r\n//     dislike: number\r\n// }\r\n//\r\n// type ProfilePageTypes = {\r\n//     newPostText: string\r\n//     posts: Array<PostDataType>\r\n// }\r\n//\r\n// type StateData = {\r\n//     dialogReducer: DialogsTypes\r\n//     profileReducer: ProfilePageTypes\r\n// }\r\n//\r\n//\r\n// type AppTypes = {\r\n//     state: StateData\r\n//     dispatch: (action: ActionType) => void\r\n//}\r\n// postData={props.state.profileReducer.posts}\r\n// dispatch={props.dispatch.bind(props.state)}\r\n// newPostText={props.state.profileReducer.newPostText}\r\n\r\n// text={props.state.dialogReducer.messageText}\r\n// dispatch={props.dispatch.bind(props.state)}\r\n// dialogsData={props.state.dialogReducer}\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div className={'row'}>\r\n                <div className={'col-3 fixed-left'}>\r\n                    <SideBar/>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <Route path={'/profile/:userId?'}\r\n                           render={() => <Profile\r\n                           />}/>\r\n                    <Route path={'/messages'}\r\n                           render={() => <DialogsContainer\r\n                           />}/>\r\n                    <Route path={'/users'}\r\n                           render={() => <UsersCon\r\n                           />}/>\r\n                    <Route path={'/login'}\r\n                           render={() => <Login\r\n                           />}/>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport ProfileReducer from \"./ProfileReducer\";\r\nimport DialogReducer from \"./DialogReducer\";\r\nimport UsersReducer from \"./UsersReducer\";\r\nimport {AuthReducer} from \"./AuthReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer: ProfileReducer,\r\n    dialogReducer: DialogReducer,\r\n    userReducer:UsersReducer,\r\n    AuthReducer\r\n})\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware))\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/ReduxStore\";\nimport {Provider} from \"react-redux\";\n\n// dispatch={store.dispatch.bind(store)\n\nconst Rerender=()=>{\n    ReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n           <Provider store={store}>\n               <App/>\n           </Provider>\n        </BrowserRouter>\n        ,\n        document.getElementById('root')\n    );\n}\nRerender()\nstore.subscribe(()=>{\n    Rerender()\n})\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"SideBar_nav__28ewa\",\"ul\":\"SideBar_ul__2eOnI\",\"li\":\"SideBar_li__2-BPu\",\"active\":\"SideBar_active__Q4w7w\"};"],"sourceRoot":""}